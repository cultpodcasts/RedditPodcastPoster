name: Provision and Deploy

on:
  push:
    branches:
      - main
      - feature/aot

permissions:
  id-token: write
  contents: read

env:  
  DEPLOYMENT_RESOURCEGROUP_NAME: AutomatedInfra
  MANAGEMENT_RESOURCEGROUP_NAME: ${{ secrets.MANAGEMENT_RESOURCEGROUP_NAME }}
  AZURE_KEYVAULT_NAME: ${{ secrets.AZURE_KEYVAULT_NAME }}
  storageName: cultpodcastsstg
  suffix: infra
  location: uksouth
  functionState: start
  API_PACKAGE_PATH: './Cloud/Api' 
  DISCOVER_PACKAGE_PATH: './Cloud/Discovery' 
  INDEXER_PACKAGE_PATH: './Cloud/Indexer' 
  DOTNET_VERSION: '9.0.x' 
  buildConfiguration: '--configuration Release'
  outputApi: 'output/api'
  outputDiscover: 'output/discover'
  outputIndexer: 'output/indexer'
  artifactApi: 'api'
  artifactDiscover: 'discover'
  artifactIndexer: 'indexer'
  artifactInfrastructure: 'infrastructure'

jobs:
  monitor-infrastructure:
    runs-on: ubuntu-latest
    outputs:
      infrastructre_changed: ${{ steps.infrastructure.outputs.src }}
    steps:
    - uses: dorny/paths-filter@v3
      id: infrastructure
      with:
        filters: |
          src:
          - 'infrastructure' 
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 9.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build ${{ env.buildConfiguration }} --no-restore
    - name: Test
      run: dotnet test ${{ env.buildConfiguration }} --no-build --verbosity normal
    - name: Publish api
      run: dotnet publish ${{ env.buildConfiguration }} --no-build ${{ env.API_PACKAGE_PATH }} -o:${{ env.outputApi }}
    - name: Publish discover
      run: dotnet publish ${{ env.buildConfiguration }} --no-build ${{ env.DISCOVER_PACKAGE_PATH }} -o:${{ env.outputDiscover }}
    - name: Publish indexer
      run: dotnet publish ${{ env.buildConfiguration }} --no-build ${{ env.INDEXER_PACKAGE_PATH }} -o:${{ env.outputIndexer }}
    - name: Archive api-production artifacts
      uses: actions/upload-artifact@v4
      with:
          name: ${{ env.artifactApi }}
          path: ${{ env.outputApi }}
          include-hidden-files: true
    - name: Archive discover-production artifacts
      uses: actions/upload-artifact@v4
      with:
          name: ${{ env.artifactDiscover }}
          path: ${{ env.outputDiscover }}
          include-hidden-files: true
    - name: Archive indexer-production artifacts
      uses: actions/upload-artifact@v4
      with:
          name: ${{ env.artifactIndexer }}
          path: ${{ env.outputIndexer }}            
          include-hidden-files: true
    - name: Archive bicep artifacts
      uses: actions/upload-artifact@v4
      with:
          name: ${{ env.artifactInfrastructure }}
          path: Infrastructure
          include-hidden-files: true

  provision:
    runs-on: ubuntu-latest
    needs: [build-and-test]
    if: needs.monitor-infrastructure.outputs.infrastructure.outputs.infrastructre_changed == 'true'
    continue-on-error: false
    steps:
    - name: Download bicep artifact
      uses: actions/download-artifact@v4
      with:
          name: ${{ env.artifactInfrastructure }}
          path: Infrastructure
    - name: Display structure of downloaded files
      run: ls -R -a .
  
    - name: Azure Login
      uses: Azure/login@v2.2.0            
      with:
        client-id: ${{ secrets.DEPLOYMENT_Client_ID }}
        tenant-id: ${{ secrets.AZURE_Tenant_ID }}
        subscription-id: ${{ secrets.AZURE_Subscription_ID }}

    - name: Storage (Deploy Bicep)
      id: bicepstoragedeploy
      uses: azure/bicep-deploy@v1
      with:
        type: deployment
        operation: create
        name: bicep-storage-${{ github.run_number }}
        scope: resourceGroup
        subscription-id: ${{ secrets.AZURE_Subscription_ID }}
        resource-group-name: ${{ env.DEPLOYMENT_RESOURCEGROUP_NAME }}
        template-file: ./Infrastructure/function-storage.bicep
        parameters: '{"location":"${{ env.location }}", "storageName":"${{ env.storageName }}"}'
    - name: Application-Insights (Deploy Bicep)
      id: bicepappinsightsdeploy
      uses: azure/bicep-deploy@v1
      with:
        type: deployment
        operation: create
        name: bicep-appinsights-${{ github.run_number }}
        scope: resourceGroup
        subscription-id: ${{ secrets.AZURE_Subscription_ID }}
        resource-group-name: ${{ env.DEPLOYMENT_RESOURCEGROUP_NAME }}
        template-file: ./Infrastructure/function-application-insights.bicep
        parameters: '{"location":"${{ env.location }}", "suffix":"${{ env.suffix }}"}'
    - name: Functions (Deploy Bicep)
      id: bicepfunctionsdeploy
      uses: azure/bicep-deploy@v1
      with:
        type: deployment
        operation: create
        name: bicep-functions-${{ github.run_number }}
        scope: resourceGroup
        subscription-id: ${{ secrets.AZURE_Subscription_ID }}
        resource-group-name: ${{ env.DEPLOYMENT_RESOURCEGROUP_NAME }}
        template-file: ./Infrastructure/functions.bicep
        parameters-file: ./Infrastructure/functions.bicepparam
        parameters: '{"location":"${{ env.location }}", "suffix":"${{ env.suffix }}", "storageName":"${{ env.storageName }}"}'

    - name: Set Function State
      if: ${{ (env.functionState == 'start') || (env.functionState == 'stop') }}
      uses: Azure/cli@v2.1.0
      with:
        azcliversion: latest
        inlineScript: |
          az functionapp ${{ env.functionState }} --name api-infra --resource-group ${{ env.DEPLOYMENT_RESOURCEGROUP_NAME }}
          az functionapp ${{ env.functionState }} --name indexer-infra --resource-group ${{ env.DEPLOYMENT_RESOURCEGROUP_NAME }}
          az functionapp ${{ env.functionState }} --name discover-infra --resource-group ${{ env.DEPLOYMENT_RESOURCEGROUP_NAME }}

  api-deploy:
    runs-on: ubuntu-latest
    needs: provision
    permissions:
      id-token: write #This is required for requesting the JWT
    steps:
      - name: Download api artifact
        uses: actions/download-artifact@v4
        with:
            name: ${{ env.artifactApi }}
            path: ${{ env.outputApi }}
      - name: Display structure of downloaded files
        run: ls -R -a .

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.DEPLOYMENT_Client_ID }}
          tenant-id: ${{ secrets.AZURE_Tenant_ID }}
          subscription-id: ${{ secrets.AZURE_Subscription_ID }}

      - name: 'Run Azure Functions Action'
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: 'api-infra'
          slot-name: 'Production'
          package: ${{ env.outputApi }}

  discover-deploy:
    runs-on: ubuntu-latest
    needs: provision
    permissions:
      id-token: write #This is required for requesting the JWT
    steps:
      - name: Download api artifact
        uses: actions/download-artifact@v4
        with:
            name: ${{ env.artifactDiscover }}
            path: ${{ env.outputDiscover }}
      - name: Display structure of downloaded files
        run: ls -R -a .

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.DEPLOYMENT_Client_ID }}
          tenant-id: ${{ secrets.AZURE_Tenant_ID }}
          subscription-id: ${{ secrets.AZURE_Subscription_ID }}

      - name: 'Run Azure Functions Action'
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: 'discover-infra'
          slot-name: 'Production'
          package: ${{ env.outputDiscover }}

  indexer-deploy:
    runs-on: ubuntu-latest
    needs: provision
    permissions:
      id-token: write #This is required for requesting the JWT
    steps:
      - name: Download api artifact
        uses: actions/download-artifact@v4
        with:
            name: ${{ env.artifactIndexer }}
            path: ${{ env.outputIndexer }}
      - name: Display structure of downloaded files
        run: ls -R -a .

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.DEPLOYMENT_Client_ID }}
          tenant-id: ${{ secrets.AZURE_Tenant_ID }}
          subscription-id: ${{ secrets.AZURE_Subscription_ID }}

      - name: 'Run Azure Functions Action'
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: 'indexer-infra'
          slot-name: 'Production'
          package: ${{ env.outputIndexer }}
